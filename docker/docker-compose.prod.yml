services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?err}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?err}
      POSTGRES_DB: ${POSTGRES_DB:?err}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.prod.api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL:?err}
      SECRET_KEY: ${SECRET_KEY:?err}
      FLASK_ENV: production
    ports:
      - "8081:8080"

  web:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.prod.web
    restart: unless-stopped
    environment:
      - NGINX_PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      - api

volumes:
  db-data:
