# --- Build stage -------------------------------------------------------------
FROM node:20-alpine AS build
WORKDIR /app

# Copy only manifests first for better layer caching
COPY web/package*.json ./
# Prefer npm ci if you have a lockfile; fallback to install
RUN if [ -f package-lock.json ]; then npm ci; else npm install; fi

# Now copy the rest of the frontend source
COPY web/ .

# Build the SPA
RUN npm run build

# --- Runtime stage (nginx) ---------------------------------------------------
FROM nginx:stable-alpine AS runtime

# Copy your prod nginx config
# NOTE: This path assumes your build CONTEXT includes the repo root (see Compose notes below)
COPY docker/nginx.prod.conf /etc/nginx/conf.d/default.conf

# Copy built assets
COPY --from=build /app/dist /usr/share/nginx/html

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]